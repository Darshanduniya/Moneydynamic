
from airflow import DAG
from airflow.operator.python_operator import PythonOperator
from datetime import datetime, timedelta
import pymonetdb
import subprocess
import logging

def execute_monet_query(industry_name):
    conn = pymonetdb.connect(username='abcd',password='Passw0rd', hostname='lnx2021', port=2023, database='DB_HLX')
    cursor= conn.cursor()

    query=f'''select count(*) from "execution_log" where operation_type='ab' and job_status='SUCCESS' and sys.str_to_date("execution_end_time",'%y-%m-%d')=current_date AND industry_name='{industry_name}' and flag='0' '''

    cursor.execute(query)

    results = cursor.fetchone()[0]
    results= int(results)

    if results>0:
        dag_id=industry_name
        subprocess.run(['airflow', 'dags',dag_id])

        update_query = f'''UPDATE "execution_log" SET dag_flag=1 WHERE  operation_type='ab' and job_status='SUCCESS' and sys.str_to_date("execution_end_time",'%y-%m-%d')=current_date AND industry_name='{industry_name}' AND dag_flag=0'''
        cursor.execute(update_query)
        conn.commit()
    else:
        print("validation issue")

    cursor.close()
    conn.close()

industry_names = ['TEC', 'FIN', 'MED', 'MAN', 'TRA', 'CON', 'SER', 'AGR', 'EDU', 'GOV', 'ART', 'ENT', 'ENE', 'MIN', 'PHY', 'RET', 'TEL', 'TRAN', 'INS', 'OTH']

default_args={
    'max_active_runs':1
}

dag=DAG(
    "Monet_testing",
    default_args=default_args,
    schedule_interval='*/5 * * * *',
    start_date=datetime(2023,5,14),
    catchup=False,
)

for industry_name in industry_names:
    task_id = f"execute_monetdb_query_{industry_name}"
    execute_query_task = PythonOperator(
        task_id=task_id,
        python_callable=execute_monet_query,
        op_kwargs={'industry_name': industry_name},
        dag=dag,
    )
